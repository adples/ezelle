<?php
/**
 * wrapper Block
 *
 * This block was generated by create-acf-block-json.
 *
 * @package WordPress
 *
 * @param   array $block The block settings and attributes.
 * @param   string $content The block inner HTML (empty).
 * @param   bool $is_preview True during AJAX preview.
 * @param   (int|string) $post_id The post ID this block is saved to.
 *
 * _tw safelist classes
 * pt-10 pt-15 pt-20 pt-25 pt-30 pt-35 pt-40
 * xl:pt-10 xl:pt-15 xl:pt-18 xl:pt-20 xl:pt-25 xl:pt-30 xl:pt-35 xl:pt-40
 * pb-10 pb-15 pb-20 pb-25 pb-30 pb-35 pb-40
 * xl:pb-10 xl:pb-15 xl:pb-18 xl:pb-20 xl:pb-25 xl:pb-30 xl:pb-35 xl:pb-40
 * 2xl:h-[calc(100%-(var(--spacing))*20)]
 * lg:w-[25%] lg:w-[33%] lg:w-[50%] lg:w-[66%] lg:w-[75%]
 * left-0 right-0
 * -z-1
 * block sm:block md:block lg:block xl:block 2xl:block
 * hidden sm:hidden md:hidden lg:hidden xl:hidden 2xl:hidden
 */


$block_name = 'wrapper';

$namespace = 'acf';

$block_name = 'wp-block-' . $namespace . '-' . $block_name;

// Block #id
$anchor = ( empty( $block['anchor'] ) ) ? null : 'id=' . $block['anchor'];

// Block BG
if (!empty( $block['backgroundColor'] ) ){
	$background = 'has-' . $block['backgroundColor'] . '-background-color';
} elseif (!empty( $block['gradient'] )){
	$background = 'has-' . $block['gradient'] . '-gradient-background';
} else{
	$background = '';
}

$has_background = $background ? 'has-background' : '';

// Block padding
$padding_top = $padding_bot = '';

$padding_top_value = ( empty( $block['style']['spacing']['padding']['top'] ) ) ? '' : preg_replace('~\D~', '', $block['style']['spacing']['padding']['top']);
if(!empty( $padding_top )) $padding_top = 'pt-'.((int)$padding_top/2 - 10).' xl:pt-'.((int)$padding_top/2);

if( $padding_top_value == 50 ) $padding_top = 'pt-12 lg:pt-20 xl:pt-25';
if( $padding_top_value == 40 ) $padding_top = 'pt-12 lg:pt-15 xl:pt-20';
if( $padding_top_value == 30 ) $padding_top = 'pt-10 lg:pt-12 xl:pt-14';

$padding_bot_value = ( empty( $block['style']['spacing']['padding']['bottom'] ) ) ? '' : preg_replace('~\D~', '', $block['style']['spacing']['padding']['bottom']);
if(!empty( $padding_bot )) $padding_bot = 'pb-'.((int)$padding_bot/2 - 10).' xl:pb-'.((int)$padding_bot/2);

if( $padding_bot_value == 50 ) $padding_bot = 'pb-12 lg:pb-20 xl:pb-25';
if( $padding_bot_value == 40 ) $padding_bot = 'pb-12 lg:pb-15 xl:pb-20';
if( $padding_bot_value == 30 ) $padding_bot = 'pb-10 lg:pb-12 xl:pb-14';

// Default wrapper padding **NOTE MAKE CUSTOMIZER SETTING**
$wrapper_padding = '';

// Additional editor classes including $block['style'] defined in block.json
$additional_classes = $block['className'] ?? '';

// Filter Overlay
$rand = rand ( 10000 , 99999 );
if( get_field('filter') ){
	$filter = 'bg-filter filter-'.$rand;
} else {
	$filter = '';
}

//if( get_field('stylized') ) $stylized = true;
$stylized = get_field('stylized') ?: false;

$overflow = get_field('show_extended_img') ? 'overflow-hidden' : '';

$default_classes = 'relative';
$default_wrapper_styles = 'wrapper-inner px-4 py-8 md:px-8 md:py-12 lg:px-12 lg:py-16 relative bg-white rounded-[1rem] md:rounded-[2rem] lg:rounded-[3rem]';

if( get_field('style') === 'border' ){
	$wrapper_styles = '!rounded-tl-none border-2';
} else{
	$wrapper_styles = '!rounded-bl-none shadow-(--subtle-shadow)';
}

// Create array $all_classes and implode
$all_classes = array(
	$block_name,
	$background,
	$has_background,
	$padding_top,
	$padding_bot,
	$wrapper_padding,
	$filter,
	$default_classes,
	$overflow,
	$additional_classes,
);

$classes = implode( ' ', $all_classes );

// Container
if( get_field('container') ) {
	$container = 'relative z-2 container content-wrapper px-6 mx-auto';
} else{
	$container = 'relative z-2 content-wrapper';
}


// Background Image
$bg= '';
if( get_field('bg') ){
	$bg = get_field('bg');
	$bg_md = wp_get_attachment_image_src($bg['id'], 'medium_large');
	$bg_full = wp_get_attachment_image_src($bg['id'], 'full');

	$attributes = 'class="'.$classes.' bg-local bg-cover bg-center bg-no-repeat bg-resize" style="background-image: url('.$bg_md[0].')" data-img-md="'.$bg_md[0].'" data-img-full="'.$bg_full[0].'"';

} else {
	$attributes = 'class="'.$classes.'"';
}

?>

<!-- Inline Style for Filter Overlay -->
<?php if( !empty( $filter ) ): ?>
	<style>
		.filter-<?php echo $rand; ?>::before{
			background-color: <?php echo get_field('filter'); ?>
		}
	</style>
<?php endif; ?>
<!-- / Inline Style for Filter Overlay -->

<section <?php echo esc_attr( $anchor ); ?> <?php echo $attributes ?>>

	<?php if( have_rows('extended_img') ): ?>
		<?php while( have_rows('extended_img') ): the_row(); ?>
			<?php
			$default_img_classes = 'mx-auto w-[calc(100%-(var(--spacing))*12)] sm:w-[calc(40rem-(var(--spacing))*12)] md:w-[calc(48rem-(var(--spacing))*12)] lg:absolute mb-4 lg:mb-0';
			$spacer_class = '';
			if( get_sub_field('img_spacer') == 'bottom') $spacer_class = 'top-0 lg:h-[calc(100%-(var(--spacing))*18)]';
			if( get_sub_field('img_spacer') == 'top') $spacer_class = 'bottom-0 lg:h-[calc(100%-(var(--spacing))*18)]';

			$width_class = 'lg:'.get_sub_field('img_width') ?: 'w-full';
			$pos_class = get_sub_field('img_position') ?: 'left-0';

			if( get_sub_field('img_spacer') === 'top' && $pos_class === 'right-0' ){
				$img_pos = 'object-top';
				$img_radius = 'lg:rounded-tl-4xl';
			}elseif( get_sub_field('img_spacer') === 'top' && $pos_class === 'left-0' ){
				$img_pos = 'object-top';
				$img_radius = 'lg:rounded-tr-4xl';
			}elseif( get_sub_field('img_spacer') === 'bottom' && $pos_class === 'right-0' ){
				$img_pos = 'object-top';
				$img_radius = 'lg:rounded-bl-4xl';
			}elseif( get_sub_field('img_spacer') === 'bottom' && $pos_class === 'left-0' ){
				$img_pos = 'object-top';
				$img_radius = 'lg:rounded-br-4xl';
			}else{
				$img_pos = 'object-center';
				$img_radius = 'rounded-xl';
			}

			$all_img_classes = array(
				$default_img_classes,
				$spacer_class,
				$width_class,
				$pos_class
			);

			$img_classes = implode( ' ', $all_img_classes );

			?>
			<?php if( get_sub_field('img') ): ?>
				<div class="<?php echo $img_classes.' '.$img_radius ?>">
					<img src="<?php echo get_sub_field('img')['url']?>" class="w-full h-full object-cover rounded-xl lg:rounded-none <?php echo $img_pos.' '.$img_radius ?>"/>
				</div>
			<?php endif; ?>
		<?php endwhile; ?>
	<?php endif; ?>

	<InnerBlocks class="<?php echo $container ?>" />

</section>
